
package bfs;

option cc_generic_services = true;

message WriteBlockRequest {
    optional uint64 sequence_id = 1;
    optional int64 block_id = 2;
    optional int64 offset = 3;
    optional int32 packet_seq = 4;
    optional bytes databuf = 5;
    repeated string chunkservers = 6;
    optional bool is_last = 7;
    required bool is_append = 8;
    repeated string desc = 11;
    repeated int64 timestamp = 12;
}

message WriteBlockResponse {
    required uint64 sequence_id = 1;
    optional int32 status = 2;
    optional string bad_chunkserver = 3;
    repeated string desc = 11;
    repeated int64 timestamp = 12;
}

message ReadBlockRequest {
    optional uint64 sequence_id = 1;
    optional int64 block_id = 2;
    optional int64 offset = 3;
    optional int32 read_len = 4;
}
message ReadBlockResponse {
    optional uint64 sequence_id = 1;
    optional int32 status = 2;
    optional bytes databuf = 3;
    repeated int64 timestamp = 9;
}

service ChunkServer {
    rpc WriteBlock(WriteBlockRequest) returns(WriteBlockResponse);
    rpc ReadBlock(ReadBlockRequest) returns(ReadBlockResponse);
}

